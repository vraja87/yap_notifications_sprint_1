version: '3.8'

x-base: &base
  restart: unless-stopped
  env_file:
    - .env


services:
  nginx:
    <<:
      - *base
    image: nginx:1.25.3-alpine
    volumes:
      - nginx_logs:/var/log/nginx/
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config/conf.d:/etc/nginx/conf.d:ro
    ports:
      - 80:80

  notify_db:
    <<:
      - *base
    image: "postgres:16.1-alpine3.19"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./notify_db:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_DB=${NOTIFY_DB_NAME}
      - POSTGRES_USER=${NOTIFY_DB_USER}
      - POSTGRES_PASSWORD=${NOTIFY_DB_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${NOTIFY_DB_NAME} -U ${NOTIFY_DB_USER}" ]
      interval: 1s
      timeout: 1s
      retries: 30

  api:
    <<:
      - *base
    build:
      context: ./api
      dockerfile: ./docker/Dockerfile
      args:
        - APP_DIR=${APP_DIR}
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/api/v1/health"]
      interval: 5s
      timeout: 3s
      retries: 3
    environment:
      START_MODE: BACKEND
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - api_logs:/var/log/notifications/

  mock-api:
    <<:
      - *base
    build:
      context: ./mock-api
      dockerfile: ./docker/Dockerfile
      args:
        APP_DIR: ${APP_DIR}
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/api/v1/health"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - 8001:8000

  scheduler:
    <<:
      - *base
    build:
      context: ./scheduler
      dockerfile: ./docker/Dockerfile
      args:
        - APP_DIR=${APP_DIR}
    depends_on:
      notify_db:
        condition: service_healthy
      api:
        condition: service_started

  rabbitmq:
    <<:
      - *base
    image: rabbitmq:3.12.12-management-alpine
    volumes:
      - rabbit:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    #
    ports:
      - 15672:15672
      - 5672:5672

volumes:
  nginx_logs:
  api_logs:
  rabbit:
  db_data:
